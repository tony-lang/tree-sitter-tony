============================================
destructuring pattern
============================================

x@[y] = z

---

(program
  term: (assignment
    pattern: (destructuring_pattern
      alias: (identifier_pattern)
      pattern: (list_pattern
        element: (binding_pattern
          name: (identifier_pattern))))
    value: (identifier)))

============================================
struct pattern
============================================

{ b: c: Type } = a
{ b: c: Type, d: Type, ['e']: e: Type, ...f: Type := {} } = a

---

(program
  term: (assignment
    pattern: (destructuring_pattern
      pattern: (struct_pattern
        member: (member_pattern
          key: (shorthand_member_identifier)
          value: (binding_pattern
            name: (identifier_pattern)
            type: (type)))))
    value: (identifier))
  term: (assignment
    pattern: (destructuring_pattern
      pattern: (struct_pattern
        member: (member_pattern
          key: (shorthand_member_identifier)
          value: (binding_pattern
            name: (identifier_pattern)
            type: (type)))
        member: (shorthand_member_pattern
          name: (identifier_pattern)
          type: (type))
        member: (member_pattern
          key: (string)
          value: (binding_pattern
            name: (identifier_pattern)
            type: (type)))
        rest: (binding_pattern
          name: (identifier_pattern)
          type: (type)
          default: (struct))))
    value: (identifier)))

============================================
tagged struct pattern
============================================

tag { b: c: Type } = a
tag { b: c: Type, d: Type, ['e']: e: Type, ...f: Type := {} } = a

---

(program
  term: (assignment
      pattern: (tagged_pattern
        name: (identifier)
        pattern: (destructuring_pattern
          pattern: (struct_pattern
            member: (member_pattern
              key: (shorthand_member_identifier)
              value: (binding_pattern
                name: (identifier_pattern)
                type: (type))))))
    value: (identifier))
  term: (assignment
      pattern: (tagged_pattern
        name: (identifier)
        pattern: (destructuring_pattern
          pattern: (struct_pattern
            member: (member_pattern
              key: (shorthand_member_identifier)
              value: (binding_pattern
                name: (identifier_pattern)
                type: (type)))
            member: (shorthand_member_pattern
              name: (identifier_pattern)
              type: (type))
            member: (member_pattern
              key: (string)
              value: (binding_pattern
                name: (identifier_pattern)
                type: (type)))
            rest: (binding_pattern
              name: (identifier_pattern)
              type: (type)
              default: (struct)))))
    value: (identifier)))

============================================
tuple pattern
============================================

(a, b: Type, ...c) = a

---

(program
  term: (assignment
    pattern: (destructuring_pattern
      pattern: (tuple_pattern
        element: (binding_pattern
          name: (identifier_pattern))
        element: (binding_pattern
          name: (identifier_pattern)
          type: (type))
        rest: (binding_pattern
          name: (identifier_pattern))))
    value: (identifier)))

============================================
tagged tuple pattern
============================================

tag (a, b: Type, ...c) = a

---

(program
  term: (assignment
      pattern: (tagged_pattern
        name: (identifier)
        pattern: (destructuring_pattern
          pattern: (tuple_pattern
            element: (binding_pattern
              name: (identifier_pattern))
            element: (binding_pattern
              name: (identifier_pattern)
              type: (type))
            rest: (binding_pattern
              name: (identifier_pattern)))))
    value: (identifier)))

============================================
list pattern
============================================

[b: Type, c: Type] = a
[b: Type, c: Type, ...d: Type := [1]] = a

---

(program
  term: (assignment
    pattern: (destructuring_pattern
      pattern: (list_pattern
        element: (binding_pattern
          name: (identifier_pattern)
          type: (type))
        element: (binding_pattern
          name: (identifier_pattern)
          type: (type))))
    value: (identifier))
  term: (assignment
    pattern: (destructuring_pattern
      pattern: (list_pattern
        element: (binding_pattern
          name: (identifier_pattern)
          type: (type))
        element: (binding_pattern
          name: (identifier_pattern)
          type: (type))
        rest: (binding_pattern
          name: (identifier_pattern)
          type: (type)
          default: (list
            element: (number)))))
    value: (identifier)))

============================================
tagged list pattern
============================================

tag [b: Type, c: Type] = a
tag [b: Type, c: Type, ...d: Type := [1]] = a

---

(program
  term: (assignment
      pattern: (tagged_pattern
        name: (identifier)
        pattern: (destructuring_pattern
          pattern: (list_pattern
            element: (binding_pattern
              name: (identifier_pattern)
              type: (type))
            element: (binding_pattern
              name: (identifier_pattern)
              type: (type)))))
    value: (identifier))
  term: (assignment
      pattern: (tagged_pattern
        name: (identifier)
        pattern: (destructuring_pattern
          pattern: (list_pattern
            element: (binding_pattern
              name: (identifier_pattern)
              type: (type))
            element: (binding_pattern
              name: (identifier_pattern)
              type: (type))
            rest: (binding_pattern
              name: (identifier_pattern)
              type: (type)
              default: (list
                element: (number))))))
    value: (identifier)))

============================================
tagged pattern
============================================

(tag b) = a

---

(program
  term: (assignment
    pattern: (pattern_group
      pattern: (tagged_pattern
        name: (identifier)
        pattern: (binding_pattern
          name: (identifier_pattern))))
    value: (identifier)))

============================================
wildcard pattern
============================================

(_, b) = a

---

(program
  term: (assignment
    pattern: (destructuring_pattern
      pattern: (tuple_pattern
        element: (wildcard_pattern)
        element: (binding_pattern
          name: (identifier_pattern))))
    value: (identifier)))
