============================================
map pattern
============================================

{'b' -> b} := a
{'b' -> b, c, ...d} := a

---

(program
  (assignment
    left: (map_pattern
      (pattern_pair
        left: (string_pattern)
        right: (pattern
          name: (identifier_pattern))))
    right: (identifier))
  (assignment
    left: (map_pattern
      (pattern_pair
        left: (string_pattern)
        right: (pattern
          name: (identifier_pattern)))
      (shorthand_pair_identifier_pattern
        name: (identifier_pattern))
      (rest_map
        name: (identifier_pattern)))
    right: (identifier)))

============================================
tuple pattern
============================================

(b, c) := a
(b, ...d) := a

---

(program
  (assignment
    left: (tuple_pattern
      (pattern
        name: (identifier_pattern))
      (pattern
        name: (identifier_pattern)))
    right: (identifier))
  (assignment
    left: (tuple_pattern
      (pattern
        name: (identifier_pattern))
      (rest_list
        name: (identifier_pattern)))
    right: (identifier)))

============================================
list pattern
============================================

[b, c] := a
[b, c, ...d] := a

---

(program
  (assignment
    left: (list_pattern
      (pattern
        name: (identifier_pattern))
      (pattern
        name: (identifier_pattern)))
    right: (identifier))
  (assignment
    left: (list_pattern
      (pattern
        name: (identifier_pattern))
      (pattern
        name: (identifier_pattern))
      (rest_list
        name: (identifier_pattern)))
    right: (identifier)))
