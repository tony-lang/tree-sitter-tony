==================
map type
==================

a :: { Type: Type } := 1

---

(program
  expression: (assignment
    pattern: (identifier_pattern
      name: (identifier_pattern_name)
      type: (map_type
        key: (parametric_type
          name: (type))
        value: (parametric_type
          name: (type))))
    value: (number)))

==================
tuple type
==================

a :: (Type, Type) := 1

---

(program
  expression: (assignment
    pattern: (identifier_pattern
      name: (identifier_pattern_name)
      type: (tuple_type
        parameter: (parametric_type
          name: (type))
        parameter: (parametric_type
          name: (type))))
    value: (number)))

==================
list type
==================

a :: [Type] := 1

---

(program
  expression: (assignment
    pattern: (identifier_pattern
      name: (identifier_pattern_name)
      type: (list_type
        parameter: (parametric_type
          name: (type))))
    value: (number)))

==================
curried type
==================

a :: Type -> [Type] -> Type := 1
a :: Type -> (Type -> Type) -> a := 1

---

(program
  expression: (assignment
    pattern: (identifier_pattern
      name: (identifier_pattern_name)
      type: (curried_type
        parameter: (parametric_type
          name: (type))
        parameter: (curried_type
          parameter: (list_type
            parameter: (parametric_type
              name: (type)))
          parameter: (parametric_type
            name: (type)))))
    value: (number))
  expression: (assignment
    pattern: (identifier_pattern
      name: (identifier_pattern_name)
      type: (curried_type
        parameter: (parametric_type
          name: (type))
        parameter: (curried_type
          parameter: (curried_type
            parameter: (parametric_type
              name: (type))
            parameter: (parametric_type
              name: (type)))
          parameter: (type_variable))))
    value: (number)))

==================
union type
==================

a :: Type -> Type | Type | Type := 1

---

(program
  expression: (assignment
    pattern: (identifier_pattern
      name: (identifier_pattern_name)
      type: (curried_type
        parameter: (parametric_type
          name: (type))
        parameter: (union_type
          parameter: (union_type
            parameter: (parametric_type
              name: (type))
            parameter: (parametric_type
              name: (type)))
          parameter: (parametric_type
            name: (type)))))
    value: (number)))


==================
parametric type
==================

Type
Type<a>
Type<Type, a, Type>

---

(program
  expression: (parametric_type
    name: (type))
  expression: (parametric_type
    name: (type)
    parameter: (type_variable))
  expression: (parametric_type
    name: (type)
    parameter: (parametric_type
      name: (type))
    parameter: (type_variable)
    parameter: (parametric_type
      name: (type))))
